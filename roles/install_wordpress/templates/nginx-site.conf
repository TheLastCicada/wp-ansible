server {
        listen 443 ssl{% if item.nginx_default_server | default(false) %} default_server{% endif %}; # All sites should be SSL
        http2 on;       # Enable HTTP/2
        server_name {{ item.name }};

        access_log   /var/log/nginx/{{ item.name }}.access.log main;
        error_log    /var/log/nginx/{{ item.name }}.error.log;

        root {{ item.www_root }};
        index index.php;

        # Comment out or delete any unneeded includes
{% if item.nginx_disable_robots | default(false) %}
        include nginx_configs/includes/robots.txt.inc;  # Only enable if site is non-public
{% else %}
        #include nginx_configs/includes/robots.txt.inc;  # Only enable if site is non-public
{% endif %}
        include nginx_configs/includes/performance.inc; # Speed optimizations
        include nginx_configs/includes/ssl_config.inc;  # SSL optimizations
{% if item.nginx_enable_cloudflare | default(false) %}
        include nginx_configs/includes/cloudflare.inc;  # Set real visitor IP address if using Cloudflare
{% else %}
        #include nginx_configs/includes/cloudflare.inc;  # Set real visitor IP address if using Cloudflare
{% endif %}
        include nginx_configs/security/wordpress_security.inc;  # Recommended security rules
        include nginx_configs/includes/wp_microcaching.inc;  # Short duration caching setup
{% if item.nginx_enable_multisite | default(false) %}
        include nginx_configs/includes/wp_subdir_multisite.inc;  # Subdirectory WP multisite rules
{% else %}
        #include nginx_configs/includes/wp_subdir_multisite.inc;  # Subdirectory WP multisite rules
{% endif %}
        include nginx_configs/includes/expires.inc;  # Browser caching rules

        # The block_xmlrpc.inc file requires the variables $allow_jetpack
        # (set in the server block), $is_xmlrpc_whitelist_ip (set in the http
        # block in nginx.inc), and $is_automattic_ip (set in the http block via
        # the file automatticips.inc. Please be sure these variables are all set
        # before including this file.  See the example nginx.inc for more info.)
        #include nginx_configs/security/block_xmlrpc.inc;

        # Create this file with the command:
        #     `openssl dhparam -out /etc/nginx/dhparam.pem 4096`
        # Careful! It will take many minutes and max your CPU!
        ssl_dhparam /etc/nginx/dhparam.pem;

        ssl_certificate    /etc/letsencrypt/live/{{ item.name }}/fullchain.pem;
        ssl_certificate_key    /etc/letsencrypt/live/{{ item.name }}/privkey.pem;

        #define cache valid time for microcaching (use with nginx_configs/includes/wp_microcaching.inc)
        fastcgi_cache_valid any {{ item.wp_microcache_time }}s;

        # Jetpack connects over xmlrpc.php. If we include block_xmlrpc.inc
        # above, Jetpack will be unable to connect without extra logic. This
        # variable controls whether we allow connections to xmlrpc.php for
        # Jetpack or not. Valid settings for this variable are:
        #       0  = You are not using Jetpack
        #       ua = You are using Jetpack and want to match the
        #            Jetpack user-agent to allow access. This
        #            is the preferred method and is most reliable while
        #            providing a reasonable level of protection.
        #       ip = You are using Jetpack and wish to use the Automattic
        #            (owner of Jetpack) IP address range AND the user
        #            agent as the mechanisms to allow access to
        #            xmlrpc.php. This is the most secure method, but
        #            could break your connection to Jetpack at any time
        #            due to a change of IP address by Automattic.
        #            For discussion and more info, see
        #            https://github.com/Automattic/jetpack/issues/1719
        set $allow_jetpack ua;

        location / {
                try_files $uri $uri/ /index.php?$args ;
        }

        location ~ \.php$ {
                include nginx_configs/includes/php.inc;
        }

        # This should match upload_max_filesize in php.ini. Note
        # upload_max_filesize can get overwritten in a number of places,
        # including the actual PHP code or the PHP-FPM www.conf file.
        client_max_body_size 100M;

        # Block malicious IPs
        # deny 52.4.101.126;

        add_header X-Frame-Options SAMEORIGIN;


}
